
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author SnowGroup
 */
public class HighScore extends javax.swing.JFrame {

    /**
     * this class not completed
     */
    private ArrayList<Rank> ranks;
    private RankManagement rm;

    /**
     * Creates new form HighScore
     */
    public HighScore() throws IOException, Exception {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/img_test/1.png"));
        this.setIconImage(icon);
        designTable();
        //set the frame to center the screen
        this.setLocationRelativeTo(null);
    }

    /**
     * get data from file txt add load to JTable
     * @throws Exception 
     */
    public void loadData() throws Exception {
        rm = new RankManagement("src/data/rank.txt");
        rm.loadFile();
        //call Table Model
        DefaultTableModel model = (DefaultTableModel) tblHighScores.getModel();
        Object dataRow[] = new Object[3];
        //sort file
        rm.sort();
        //Get data into table
        //int length = rm.getListRank().size();
        for (int i = 0; i < 5; i++) {
            dataRow[0] = i + 1;
            dataRow[1] = rm.getListRank().get(i).getName();
            dataRow[2] = rm.getListRank().get(i).getScore();
            model.addRow(dataRow);
        }
    }

    /**
     * Design JTable
     */
    public void designTable() {

        DefaultTableCellRenderer centerRender = new DefaultTableCellRenderer();
        centerRender.setHorizontalAlignment(JLabel.CENTER);
        try {
            loadData();
            for (int i = 0; i < 3; i++) {
                tblHighScores.getColumnModel().getColumn(i).setCellRenderer(centerRender);
            }
        } catch (Exception ex) {
            Logger.getLogger(HighScore.class.getName()).log(Level.SEVERE, null, ex);
        }

        //change header's font and text
        JTableHeader header = tblHighScores.getTableHeader();
        header.setForeground(Color.black);
        header.setFont(new Font("Tahoma", Font.BOLD, 26));
        ((DefaultTableCellRenderer) header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ScrollPane.setOpaque(false);
        ScrollPane.getViewport().setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        ScrollPane = new javax.swing.JScrollPane();
        tblHighScores = new javax.swing.JTable();
        lblBGroundHScores = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("High Scores");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("VNI-Fato", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HighScores");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 370, 80));

        btnOK.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnOK.setText("Back");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        getContentPane().add(btnOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 540, 130, 50));

        tblHighScores.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tblHighScores.setForeground(new java.awt.Color(102, 0, 102));
        tblHighScores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Top", "Name", "Scores"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHighScores.setGridColor(new java.awt.Color(0, 255, 51));
        tblHighScores.setIntercellSpacing(new java.awt.Dimension(1, 7));
        tblHighScores.setOpaque(false);
        tblHighScores.setRowHeight(45);
        tblHighScores.setShowHorizontalLines(false);
        tblHighScores.setShowVerticalLines(false);
        ScrollPane.setViewportView(tblHighScores);
        if (tblHighScores.getColumnModel().getColumnCount() > 0) {
            tblHighScores.getColumnModel().getColumn(0).setResizable(false);
            tblHighScores.getColumnModel().getColumn(1).setResizable(false);
            tblHighScores.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 880, 490));

        lblBGroundHScores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBGroundHScores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Background-rain 3.jpg"))); // NOI18N
        getContentPane().add(lblBGroundHScores, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        this.setVisible(false);
        GamePikachu pikachu = new GamePikachu();
        pikachu.setVisible(true);
    }//GEN-LAST:event_btnOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new HighScore().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(HighScore.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBGroundHScores;
    private javax.swing.JTable tblHighScores;
    // End of variables declaration//GEN-END:variables
}
